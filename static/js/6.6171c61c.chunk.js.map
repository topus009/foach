{"version":3,"sources":["styles/common.js","js/redux/actions/AppActions.js","js/components/common/CustomCheckbox/styles.js","../node_modules/@material-ui/core/esm/IconButton/IconButton.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","js/components/common/CustomCheckbox/index.js","js/components/Worker/styles.js","js/components/Worker/index.js","js/helpers/common.js","js/pages/Workers/styles.js","js/pages/Workers/index.js"],"names":["useCommonStyles","makeStyles","container","padding","maxWidth","margin","GETWORKERS","constants","PENDING","TOGGLEVACATIONCOMPLETED","GETWORKERSERROR","Component","forwardRef","props","ref","_props$edge","edge","children","classes","className","_props$color","color","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","_props$size","size","other","createElement","ButtonBase","root","concat","capitalize","small","start","edgeStart","end","edgeEnd","centerRipple","focusRipple","label","withStyles","theme","textAlign","flex","fontSize","typography","pxToRem","borderRadius","overflow","palette","action","active","transition","transitions","create","duration","shortest","backgroundColor","hoverOpacity","marginLeft","marginRight","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","width","display","alignItems","justifyContent","name","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","disabledProp","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","isControlled","useRef","current","_React$useState","useState","Boolean","checkedState","setCheckedState","muiFormControl","useFormControl","hasLabelFor","component","role","undefined","event","input","newChecked","target","cursor","position","opacity","height","top","left","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","text","StyledCheckbox","Checkbox","CustomCheckbox","disableRipple","useWorkerStyles","worker","colors","worker_hover_bg_color","worker_status","worker_status_color","completed","worker_status_completed_color","worker_checked_bg_color","worker_checked_hover_bg_color","Worker","item","onSelect","toggleCompleted","Title","ID","Completed","completedText","composedStyles","cn","composedCompletedStyles","Typography","onClick","convertArrayToString","arr","map","val","useWorkersStyles","workers","borderCollapse","borderSpacing","worker_color","workers_header_status","workers_header_status_btn","lineHeight","workers_header_status_btn_color","workers_header_status_btn_bg_color","textTransform","Workers","loading","getWorkers","toggleVacationCompleted","selectedItems","setSelectedItems","selectedAll","setSelectedAll","memoisedGetWorkers","useCallback","useEffect","workersIds","Object","keys","workersLength","length","isSelected","includes","handleSelectItem","filter","newSelectedItems","handleSelectAll","key","handleToggleWorkerCompleted","ids","commonClasses","Button","e","stopPropagation","defaultProps","connect","app","dispatch","Api","then","data","payload","err","console","error","params"],"mappings":"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","file":"static/js/6.6171c61c.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const useCommonStyles = makeStyles({\n  container: {\n    padding: '0 20px',\n    maxWidth: '1024px',\n    margin: 'auto',\n  },\n});\n","import Api from '../../api';\nimport constants from '../constants/App';\n\nconst { GETWORKERS, PENDING, TOGGLEVACATIONCOMPLETED, GETWORKERSERROR } = constants;\n\nexport function getWorkers() {\n  return dispatch => {\n    dispatch({ type: PENDING });\n    return Api.workers\n      .getWorkers()\n      .then(data => {\n        dispatch({\n          type: GETWORKERS,\n          payload: data,\n        });\n      })\n      .catch(err => {\n        console.error({ err });\n        return dispatch({ type: GETWORKERSERROR });\n      });\n  };\n}\n\nexport function toggleVacationCompleted(payload) {\n  return {\n    type: TOGGLEVACATIONCOMPLETED,\n    payload,\n  };\n}\n","import { withStyles } from '@material-ui/core/styles';\n\nexport const withCheckboxStyles = Component =>\n  withStyles({\n    root: {\n      padding: 0,\n    },\n  })(Component);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, {\n      small: classes[\"size\".concat(capitalize(size))]\n    }[size], {\n      start: classes.edgeStart,\n      end: classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: you are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      checkedState = _React$useState[0],\n      setCheckedState = _React$useState[1];\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(newChecked);\n    }\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"disabled\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref,\n    disabled: disabled\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { withCheckboxStyles } from './styles';\n\nconst StyledCheckbox = withCheckboxStyles(Checkbox);\n\nconst CustomCheckbox = props => <StyledCheckbox {...props} disableRipple color=\"primary\" />;\n\nexport default CustomCheckbox;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useWorkerStyles = makeStyles(theme => ({\n  worker: {\n    '&:hover': {\n      backgroundColor: theme.palette.colors.worker_hover_bg_color,\n    },\n  },\n  worker_status: {\n    cursor: 'pointer',\n    color: theme.palette.colors.worker_status_color,\n  },\n  completed: {\n    color: theme.palette.colors.worker_status_completed_color,\n  },\n  checked: {\n    backgroundColor: theme.palette.colors.worker_checked_bg_color,\n    '&:hover': {\n      backgroundColor: theme.palette.colors.worker_checked_hover_bg_color,\n    },\n  },\n}));\n","import React from 'react';\nimport cn from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport CustomCheckbox from '../common/CustomCheckbox';\nimport { bool, func, number, shape, string } from 'prop-types';\n\nimport { useWorkerStyles } from './styles';\n\nconst propTypes = {\n  item: shape({\n    ID: number,\n    UserName: string,\n    Completed: bool,\n  }),\n  onSelect: func.isRequired,\n  checked: bool.isRequired,\n  toggleCompleted: func.isRequired,\n};\n\nconst Worker = props => {\n  const { item, onSelect, checked, toggleCompleted } = props;\n  const { Title, ID, Completed } = item;\n\n  const completedText = Completed ? 'Да' : 'Нет';\n\n  const classes = useWorkerStyles();\n  const composedStyles = cn(classes.worker, checked && classes.checked);\n  const composedCompletedStyles = cn(classes.worker_status, Completed && classes.completed);\n\n  return (\n    <tr className={composedStyles}>\n      <td>\n        <CustomCheckbox onChange={() => onSelect(ID)} checked={checked} />\n      </td>\n      <td>\n        <Typography>{ID}</Typography>\n      </td>\n      <td>\n        <Typography>{Title}</Typography>\n      </td>\n      <td className={composedCompletedStyles} onClick={() => toggleCompleted([ID])}>\n        <Typography>{completedText}</Typography>\n      </td>\n    </tr>\n  );\n};\n\nWorker.propTypes = propTypes;\n\nexport default Worker;\n","export const convertArrayToString = arr => arr.map(val => `${val}`);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useWorkersStyles = makeStyles(theme => ({\n  workers: {\n    borderCollapse: 'separate',\n    borderSpacing: '10px 0',\n    color: theme.palette.colors.worker_color,\n  },\n  workers_header_status: {\n    display: 'flex',\n  },\n  workers_header_status_btn: {\n    marginLeft: '10px',\n    lineHeight: '14px',\n    color: theme.palette.colors.workers_header_status_btn_color,\n    backgroundColor: theme.palette.colors.workers_header_status_btn_bg_color,\n    padding: '0 2px',\n    textTransform: 'none',\n  },\n}));\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { bool, func, number, objectOf, shape, string } from 'prop-types';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { getWorkers, toggleVacationCompleted } from '../../redux/actions/AppActions';\nimport Worker from '../../components/Worker';\nimport CustomCheckbox from '../../components/common/CustomCheckbox';\nimport { convertArrayToString } from '../../helpers/common';\nimport { useWorkersStyles } from './styles';\nimport { useCommonStyles } from '../../../styles/common';\n\nconst propTypes = {\n  workers: objectOf(\n    shape({\n      ID: number,\n      UserName: string,\n      Completed: bool,\n    })\n  ),\n  loading: bool,\n  getWorkers: func.isRequired,\n  toggleVacationCompleted: func.isRequired,\n};\n\nconst defaultProps = {\n  workers: {},\n  loading: false,\n};\n\nconst Workers = ({ workers, loading, getWorkers, toggleVacationCompleted }) => {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedAll, setSelectedAll] = useState(false);\n\n  const memoisedGetWorkers = useCallback(() => getWorkers(), [getWorkers]);\n\n  useEffect(() => {\n    memoisedGetWorkers();\n  }, [memoisedGetWorkers]);\n\n  const workersIds = Object.keys(workers);\n  const workersLength = workersIds.length;\n\n  const isSelected = useCallback(id => selectedItems.includes(id), [selectedItems]);\n\n  const handleSelectItem = useCallback(\n    ID => {\n      if (isSelected(ID)) {\n        setSelectedItems(selectedItems.filter(item => item !== ID));\n        setSelectedAll(false);\n      } else {\n        const newSelectedItems = [...selectedItems, ID];\n        setSelectedItems(newSelectedItems);\n        if (newSelectedItems.length === workersLength) {\n          setSelectedAll(true);\n        }\n      }\n    },\n    [selectedItems, workersLength, setSelectedAll, isSelected, setSelectedItems]\n  );\n\n  const handleSelectAll = useCallback(\n    ({ target: { checked } }) => {\n      setSelectedAll(checked);\n      if (checked) {\n        setSelectedItems(workersIds.map(key => workers[key].ID));\n      } else {\n        setSelectedItems([]);\n      }\n    },\n    [workers, workersIds, setSelectedItems, setSelectedAll]\n  );\n\n  const handleToggleWorkerCompleted = useCallback((ids = []) => toggleVacationCompleted(convertArrayToString(ids)), [\n    toggleVacationCompleted,\n  ]);\n\n  const handleToggleSelectedWorkerCompleted = e => {\n    e.stopPropagation();\n    toggleVacationCompleted(convertArrayToString(selectedItems));\n  };\n\n  const classes = useWorkersStyles();\n  const commonClasses = useCommonStyles();\n\n  return (\n    <div className={commonClasses.container}>\n      {!loading && workersIds.length ? (\n        <table className={classes.workers}>\n          <thead>\n            <tr>\n              <th>\n                <CustomCheckbox onChange={handleSelectAll} checked={selectedAll} />\n              </th>\n              <th>\n                <Typography>ID</Typography>\n              </th>\n              <th>\n                <Typography>Работники</Typography>\n              </th>\n              <th className={classes.workers_header_status}>\n                <Typography>В отпуске</Typography>\n                {selectedItems.length ? (\n                  <Button\n                    className={classes.workers_header_status_btn}\n                    onClick={handleToggleSelectedWorkerCompleted}\n                    disabled={!selectedItems.length}\n                  >\n                    Изменить\n                  </Button>\n                ) : null}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {workersIds.map(key => {\n              const item = workers[key];\n              return (\n                <Worker\n                  key={item.ID}\n                  item={item}\n                  onSelect={handleSelectItem}\n                  checked={isSelected(item.ID)}\n                  toggleCompleted={handleToggleWorkerCompleted}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      ) : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ app }) => {\n  const { workers, loading } = app;\n  return {\n    workers,\n    loading,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getWorkers: () => dispatch(getWorkers()),\n    toggleVacationCompleted: params => dispatch(toggleVacationCompleted(params)),\n  };\n};\n\nWorkers.propTypes = propTypes;\nWorkers.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Workers);\n"],"sourceRoot":""}