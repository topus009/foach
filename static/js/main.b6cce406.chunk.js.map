{"version":3,"sources":["js/redux/constants/App.js","js/components/common/Loader/styles.js","js/components/common/Loader/index.js","js/components/Header/styles.js","js/components/Header/index.js","js/hoc/withAuth.js","js/router/routes.js","styles/index.js","js/router/router.js","js/config/constants.js","js/redux/reducers/app.js","js/redux/reducers/auth.js","js/redux/reducers/index.js","js/api/api.js","js/api/index.js","js/redux/constants/Auth.js","js/redux/actions/AuthActions.js","js/redux/store/store.js","js/redux/enhansers/setToken.js","js/redux/enhansers/setUserInfo.js","js/router/index.js","js/redux/store/index.js","js/containers/App.js","serviceWorker.js","index.js"],"names":["keyMirror","PENDING","GETWORKERS","GETWORKERSERROR","TOGGLEVACATIONCOMPLETED","useLoaderStyles","makeStyles","theme","loader","display","alignItems","justifyContent","height","circle","float","marginLeft","backgroundColor","palette","colors","loader_circle_bg_color","animationName","animationDuration","animationIterationCount","animationDirection","borderRadius","width","c_1","animationDelay","c_2","c_3","loader_circle_bounce_bg_color","Loader","classes","className","cn","useStyles","root","marginBottom","user","marginRight","Header","AppBar","position","Typography","variant","UserName","withAuth","WrappedComponent","connect","authenticated","auth","props","to","Auth","lazy","Workers","Routes","exact","path","component","createMuiTheme","overrides","MuiOutlinedInput","input","padding","margin","MuiInputLabel","outlined","transform","MuiFormControl","typography","fontSize","worker_color","worker_hover_bg_color","worker_checked_bg_color","worker_checked_hover_bg_color","worker_status_color","worker_status_completed_color","workers_header_status_btn_color","workers_header_status_btn_bg_color","withStyles","body","history","createHashHistory","ThemeProvider","basename","fallback","dbPrefix","token","constants","initialState","workers","loading","AUTH_TOKEN","AUTH_ERROR","AUTH_USER","AUTH_REQUEST","combineReducers","state","action","payload","type","error","app","forEach","worker","ID","Title","replace","changedWorkers","id","Completed","axios","axio","create","baseURL","signUp","params","post","then","getUser","get","data","getWorkers","Api","authError","email","password","dispatch","Password","localStorage","setItem","fakeToken","err","composeEnhancers","compose","configureStore","logger","createLogger","store","createStore","rootReducer","applyMiddleware","thunk","setToken","setUserInfo","module","hot","accept","nextRootReducer","require","replaceReducer","next","getItem","location","pathname","push","router","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6cce406.chunk.js","sourcesContent":["import keyMirror from 'keymirror';\n\nexport default keyMirror({\n  PENDING: null,\n  GETWORKERS: null,\n  GETWORKERSERROR: null,\n  TOGGLEVACATIONCOMPLETED: null,\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useLoaderStyles = makeStyles(theme => ({\n  loader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 'calc(100vh - 80px)',\n  },\n  circle: {\n    float: 'left',\n    marginLeft: 12,\n    backgroundColor: theme.palette.colors.loader_circle_bg_color,\n    animationName: '$bounce_circle',\n    animationDuration: '.6775s',\n    animationIterationCount: 'infinite',\n    animationDirection: 'normal',\n    borderRadius: '50%',\n    width: '24px',\n    height: '24px',\n  },\n  c_1: {\n    animationDelay: '.1s',\n  },\n  c_2: {\n    animationDelay: '.2s',\n  },\n  c_3: {\n    animationDelay: '.3s',\n  },\n  [`@keyframes bounce_circle`]: {\n    '50%': {\n      backgroundColor: theme.palette.colors.loader_circle_bounce_bg_color,\n    },\n  },\n}));\n","import React from 'react';\nimport cn from 'classnames';\nimport { useLoaderStyles } from './styles';\n\nconst Loader = () => {\n  const classes = useLoaderStyles();\n  return (\n    <div className={classes.loader}>\n      <div className={cn(classes.circle, classes.c_1)} />\n      <div className={cn(classes.circle, classes.c_2)} />\n      <div className={cn(classes.circle, classes.c_3)} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  root: {\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n    marginBottom: '20px',\n    height: '50px',\n  },\n  user: {\n    marginRight: '10px',\n  },\n});\n","import React from 'react';\nimport { shape, string, number, bool } from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport { useStyles } from './styles';\n\nconst propTypes = {\n  user: shape({\n    ID: number,\n    UserName: string.isRequired,\n    Completed: bool,\n  }),\n};\n\nconst Header = ({ user }) => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      {user && (\n        <Typography variant=\"h6\" className={classes.user}>\n          {user.UserName}\n        </Typography>\n      )}\n    </AppBar>\n  );\n};\n\nHeader.propTypes = propTypes;\n\nexport default Header;\n","import React from 'react';\nimport { bool } from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\n\nconst propTypes = {\n  authenticated: bool,\n};\n\nconst withAuth = WrappedComponent => {\n  const Authentication = props => {\n    const { authenticated } = props;\n    return authenticated ? <WrappedComponent {...props} /> : <Redirect to=\"/\" />;\n  };\n\n  const mapStateToProps = ({ auth }) => {\n    const { authenticated } = auth;\n    return {\n      authenticated,\n    };\n  };\n\n  Authentication.propTypes = propTypes;\n\n  return connect(mapStateToProps)(Authentication);\n};\n\nexport default withAuth;\n","import React, { lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport withAuth from '../hoc/withAuth';\n\nconst Auth = lazy(() => import('../pages/Auth'));\nconst Workers = lazy(() => import('../pages/Workers'));\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Auth} />\n    <Route exact path=\"/workers\" component={withAuth(Workers)} />\n  </Switch>\n);\n\nexport default Routes;\n","import { withStyles, createMuiTheme } from '@material-ui/core';\n\nconst colors = {\n  white_100: 'white',\n  gray_100: '#4a4a4a',\n  gray_300: '#bababa',\n  black_100: 'black',\n  black_200: '#171717',\n  green_100: '#00be73',\n  green_200: 'green',\n  violet_100: '#5f19aa',\n  red_100: 'red',\n  blue_100: '#00adeb',\n  blue_200: '#00bdff',\n  blue_300: 'lightblue',\n};\n\nexport const theme = createMuiTheme({\n  overrides: {\n    MuiOutlinedInput: {\n      input: {\n        padding: '5px',\n        height: '1rem',\n        margin: '5px 0 !important',\n      },\n    },\n    MuiInputLabel: {\n      outlined: {\n        transform: 'translate(13px, 13px) scale(1)',\n      },\n    },\n    MuiFormControl: {\n      root: {\n        marginBottom: '10px',\n      },\n    },\n  },\n  typography: {\n    fontSize: 12,\n  },\n  palette: {\n    colors: {\n      worker_color: colors.black_100,\n      worker_hover_bg_color: colors.gray_300,\n      worker_checked_bg_color: colors.blue_200,\n      worker_checked_hover_bg_color: colors.blue_100,\n      worker_status_color: colors.red_100,\n      worker_status_completed_color: colors.green_200,\n      workers_header_status_btn_color: colors.white_100,\n      workers_header_status_btn_bg_color: colors.gray_100,\n      loader_circle_bg_color: colors.violet_100,\n      loader_circle_bounce_bg_color: colors.green_100,\n    },\n  },\n});\n\nexport default withStyles({\n  '@global': {\n    body: {\n      margin: 0,\n    },\n  },\n})(() => null);\n","import React, { Suspense } from 'react';\nimport { shape, string, number, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/core';\n\nimport { Router as ReactRouter } from 'react-router-dom';\nimport { createHashHistory } from 'history';\nimport Loader from '../components/common/Loader';\nimport Header from '../components/Header';\nimport Routes from './routes';\nimport GlobalStyle, { theme } from '../../styles';\n\nexport const history = createHashHistory();\n\nconst propTypes = {\n  user: shape({\n    ID: number,\n    UserName: string.isRequired,\n    Completed: bool,\n  }),\n};\n\nconst AppRouter = ({ user }) => (\n  <ThemeProvider theme={theme}>\n    <ReactRouter history={history} basename=\"/green-todo\">\n      <GlobalStyle />\n      <Suspense fallback={<Loader />}>\n        <Header user={user} />\n        <Routes />\n      </Suspense>\n    </ReactRouter>\n  </ThemeProvider>\n);\n\nconst mapStateToProps = ({ auth }) => {\n  const { user } = auth;\n  return {\n    user,\n  };\n};\n\nAppRouter.propTypes = propTypes;\n\nexport default connect(mapStateToProps)(AppRouter);\n","export const dbPrefix = 'https://fakerestapi.azurewebsites.net/api';\nexport const STATIC_PATH = process.env.NODE_ENV === 'production' ? '/public' : '';\nexport const token =\n  'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1YTVlZTUxOWQ3NDg4MzAwMTIzMzRmZDgiLCJpYXQiOjE1NzMzNDA5NDIyNDMsImV4cCI6MTU3NTkzMjk0MjI0M30.itWcbMuYF3rvfQH4FDNSDtiaLRksg_TEPhMiOQN1k0M';\n","import constants from '../constants/App';\n\nconst { GETWORKERS, PENDING, TOGGLEVACATIONCOMPLETED, GETWORKERSERROR } = constants;\n\nexport const initialState = {\n  workers: {},\n  loading: false,\n};\n\nexport default function app(state = initialState, action) {\n  const { payload, type } = action;\n  if (type === GETWORKERS) {\n    const workers = {};\n    payload.forEach(worker => {\n      workers[worker.ID] = {\n        ...worker,\n        Title: worker.Title.replace('Activity ', 'Работник_'),\n      };\n    });\n    return {\n      ...state,\n      workers,\n      loading: false,\n    };\n  }\n  if (type === PENDING) {\n    return {\n      ...state,\n      loading: true,\n    };\n  }\n  if (type === GETWORKERSERROR) {\n    return {\n      ...state,\n      loading: false,\n    };\n  }\n  if (type === TOGGLEVACATIONCOMPLETED) {\n    const { workers } = state;\n    const changedWorkers = { ...workers };\n    payload.forEach(id => {\n      changedWorkers[id] = {\n        ...changedWorkers[id],\n        Completed: !changedWorkers[id].Completed,\n      };\n    });\n    return {\n      ...state,\n      workers: changedWorkers,\n    };\n  }\n  return state;\n}\n","import constants from '../constants/Auth';\n\nconst { AUTH_TOKEN, AUTH_ERROR, AUTH_USER, AUTH_REQUEST } = constants;\n\nconst initialState = {\n  loading: false,\n};\n\nexport default function auth(state = initialState, action) {\n  const { payload, type } = action;\n  if (type === AUTH_REQUEST) {\n    return {\n      ...state,\n      loading: true,\n    };\n  }\n  if (type === AUTH_TOKEN) {\n    return {\n      ...state,\n      authenticated: true,\n      loading: false,\n      error: '',\n    };\n  }\n  if (type === AUTH_USER) {\n    return {\n      ...state,\n      user: payload,\n    };\n  }\n  if (type === AUTH_ERROR) {\n    return {\n      ...state,\n      loading: false,\n      error: payload,\n    };\n  }\n  return state;\n}\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport auth from './auth';\n\nexport default combineReducers({\n  auth,\n  app,\n});\n","import axio from 'axios';\nimport { dbPrefix } from '../config/constants';\n\nconst axios = axio.create({\n  baseURL: dbPrefix,\n});\n\nexport const auth = {\n  signUp: params => axios.post('/Users', params).then(() => {}),\n  getUser: (id = 1) => axios.get(`/Users/${id}`).then(({ data }) => data),\n};\n\nexport const workers = {\n  getWorkers: () => axios.get('/Activities').then(({ data }) => data),\n};\n","import * as Api from './api';\n\nexport default Api;\n","import keyMirror from 'keymirror';\n\nexport default keyMirror({\n  AUTH_TOKEN: null,\n  AUTH_USER: null,\n  AUTH_ERROR: null,\n  AUTH_REQUEST: null,\n});\n","import Api from '../../api';\nimport { token as fakeToken } from '../../config/constants';\nimport constants from '../constants/Auth';\n\nconst { AUTH_TOKEN, AUTH_USER, AUTH_ERROR, AUTH_REQUEST } = constants;\n\nexport function authError(error) {\n  return {\n    type: AUTH_ERROR,\n    payload: error,\n  };\n}\n\nexport function signUp({ email, password }) {\n  return dispatch => {\n    dispatch({ type: AUTH_REQUEST });\n    Api.auth\n      .signUp({\n        UserName: email,\n        Password: password,\n      })\n      .then(() => {\n        localStorage.setItem('token', fakeToken);\n        dispatch({ type: AUTH_TOKEN });\n      })\n      .catch(err => dispatch(authError(err)));\n  };\n}\n\nexport function getUser(/* token */) {\n  return dispatch => {\n    Api.auth\n      .getUser()\n      .then(data => {\n        dispatch({ type: AUTH_USER, payload: data });\n      })\n      .catch(err => {\n        dispatch(authError(err));\n      });\n  };\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nimport setToken from '../enhansers/setToken';\nimport setUserInfo from '../enhansers/setUserInfo';\n\nconst composeEnhancers =\n  !PRODUCTION && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nexport default function configureStore(initialState) {\n  const logger = createLogger();\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk, logger, setToken, setUserInfo))\n  );\n\n  module.hot?.accept('../reducers', () => {\n    const nextRootReducer = require('../reducers');\n    store.replaceReducer(nextRootReducer);\n  });\n  return store;\n}\n","import constants from '../constants/Auth';\nimport { getUser } from '../actions/AuthActions';\n\nconst { AUTH_TOKEN } = constants;\n\nconst setToken = store => next => action => {\n  const { type } = action;\n  if (type === AUTH_TOKEN) {\n    const token = localStorage.getItem('token');\n    token && store.dispatch(getUser(token));\n  }\n  return next(action);\n};\n\nexport default setToken;\n","import constants from '../constants/Auth';\nimport { history } from '../../router/router';\n\nconst { AUTH_USER } = constants;\n\nconst targetPath = '/workers';\n\nconst setUserInfo = () => next => action => {\n  const { type } = action;\n  if (type === AUTH_USER && history.location.pathname !== targetPath) {\n    history.push(targetPath);\n  }\n  return next(action);\n};\n\nexport default setUserInfo;\n","import router from './router';\n\nexport default router;\n","import store from './store';\n\nexport default store;\n","import { Provider } from 'react-redux';\nimport React from 'react';\nimport Router from '../router';\nimport configureStore from '../redux/store';\nimport constants from '../redux/constants/Auth';\n\nconst { AUTH_TOKEN } = constants;\n\nexport const store = configureStore();\n\nconst token = localStorage.getItem('token');\n\nif (token) {\n  store.dispatch({ type: AUTH_TOKEN });\n}\n\nconst App = () => (\n  <Provider store={store}>\n    <Router />\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}