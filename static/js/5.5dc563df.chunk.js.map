{"version":3,"sources":["styles/common.js","js/components/common/CustomTextInput.js","js/components/common/CustomSelect.js","js/pages/Auth/styles.js","js/pages/Auth/index.js"],"names":["useCommonStyles","makeStyles","container","padding","maxWidth","margin","CustomTextInput","onChange","helperText","restProps","TextField","e","target","value","error","defaultProps","autoFocus","label","type","onBlur","variant","CustomSelect","options","placeholder","Select","MenuItem","key","disabled","map","index","useAuthStyles","auth","display","flexDirection","height","alignItems","justifyContent","position","left","right","top","bottom","cursor","form","validateRules","email","test","trim","password","length","selectOptions","connect","dispatch","signUp","params","useState","fields","setFields","selected","setSelected","errors","setErrors","classes","commonClasses","composedwrapperClasses","cn","handleChangeField","field","handleValidateField","className","FormControl","Button","color","onClick","Object","values","join","some","bool"],"mappings":"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","file":"static/js/5.5dc563df.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const useCommonStyles = makeStyles({\n  container: {\n    padding: '0 20px',\n    maxWidth: '1024px',\n    margin: 'auto',\n  },\n});\n","import React from 'react';\nimport { string, bool, func } from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nconst propTypes = {\n  value: string.isRequired,\n  onBlur: func,\n  onChange: func.isRequired,\n  autoFocus: bool,\n  label: string,\n  type: string,\n  variant: string,\n  margin: string,\n  helperText: string,\n  error: bool,\n};\n\nconst defaultProps = {\n  autoFocus: false,\n  label: '',\n  type: 'text',\n  onBlur: () => false,\n  variant: '',\n  margin: 'none',\n  helperText: '',\n  error: false,\n};\n\nconst CustomTextInput = ({ onChange, helperText, ...restProps }) => {\n  const handleChange = e => onChange(e.target.value);\n  return <TextField {...restProps} onChange={handleChange} helperText={restProps.error ? helperText : <span />} />;\n};\n\nCustomTextInput.propTypes = propTypes;\nCustomTextInput.defaultProps = defaultProps;\n\nexport default CustomTextInput;\n","import React from 'react';\nimport { string, func, array } from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst propTypes = {\n  value: string,\n  onChange: func.isRequired,\n  margin: string,\n  variant: string,\n  options: array.isRequired,\n  placeholder: string,\n};\n\nconst defaultProps = {\n  value: '',\n  margin: 'none',\n  variant: '',\n  placeholder: 'Надо что-то выбрать',\n};\n\nconst CustomSelect = ({ onChange, options, placeholder, ...restProps }) => {\n  const handleChange = e => onChange(e.target.value);\n  const getOptions = () => {\n    return [\n      <MenuItem key=\"-1\" value=\"\" disabled>\n        {placeholder}\n      </MenuItem>,\n      ...options.map(({ value, label }, index) => (\n        <MenuItem key={index} value={value}>\n          {label}\n        </MenuItem>\n      )),\n    ];\n  };\n  return (\n    <Select {...restProps} onChange={handleChange} label={restProps.placeholder} placeholder={restProps.placeholder}>\n      {getOptions()}\n    </Select>\n  );\n};\n\nCustomSelect.propTypes = propTypes;\nCustomSelect.defaultProps = defaultProps;\n\nexport default CustomSelect;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useAuthStyles = makeStyles({\n  auth: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    '& input': {\n      margin: '10px 0',\n    },\n    '& button': {\n      margin: '10px 0',\n      cursor: 'pointer',\n    },\n  },\n  form: {\n    maxWidth: '180px',\n  },\n});\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../redux/actions/AuthActions';\nimport CustomTextInput from '../../components/common/CustomTextInput';\nimport CustomSelect from '../../components/common/CustomSelect';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport { useAuthStyles } from './styles';\nimport { useCommonStyles } from '../../../styles/common';\n\nconst propTypes = {\n  signUp: func.isRequired,\n};\n\nconst validateRules = {\n  email: value => {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(value.trim());\n  },\n  password: value => value.trim().length > 7,\n};\n\nconst selectOptions = [\n  {\n    value: 'true',\n    label: 'Принять Тополова С. на работу',\n  },\n];\n\nconst Auth = ({ signUp }) => {\n  const [fields, setFields] = useState({});\n  const [selected, setSelected] = useState('');\n  const [errors, setErrors] = useState({});\n\n  const classes = useAuthStyles();\n  const commonClasses = useCommonStyles();\n  const composedwrapperClasses = cn(classes.auth, commonClasses.container);\n\n  const handleSubmit = () => signUp(fields);\n\n  const isBtnDisabled = () =>\n    !Object.values(fields)\n      .join('')\n      .trim().length ||\n    Object.values(errors).some(bool => bool) ||\n    !selected;\n\n  const handleValidateField = (field, value) => setErrors({ ...errors, [field]: !validateRules[field](value) });\n\n  const handleChangeField = (field, value) => {\n    if (field === 'selectField') {\n      setSelected(value);\n    } else {\n      setFields({ ...fields, [field]: value });\n      handleValidateField(field, value);\n    }\n  };\n\n  return (\n    <div className={composedwrapperClasses}>\n      <FormControl className={classes.form}>\n        <CustomTextInput\n          value={fields.email || ''}\n          onChange={value => handleChangeField('email', value)}\n          label=\"Email\"\n          variant=\"outlined\"\n          helperText=\"invalid email\"\n          error={errors.email}\n        />\n        <CustomTextInput\n          value={fields.password || ''}\n          onChange={value => handleChangeField('password', value)}\n          label=\"Пароль\"\n          type=\"password\"\n          variant=\"outlined\"\n          helperText=\"min 8 symbols\"\n          error={errors.password}\n        />\n        <CustomSelect\n          value={selected}\n          onChange={value => handleChangeField('selectField', value)}\n          variant=\"outlined\"\n          options={selectOptions}\n        />\n      </FormControl>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} disabled={isBtnDisabled()}>\n        Зарегистрироваться\n      </Button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: params => dispatch(signUp(params)),\n  };\n};\n\nAuth.propTypes = propTypes;\n\nexport default connect(null, mapDispatchToProps)(Auth);\n"],"sourceRoot":""}